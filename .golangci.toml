version = '2'

[linters]
default = 'none'
enable = [
  'asasalint',
  'asciicheck',
  'bidichk',
  'bodyclose',
  'canonicalheader',
  'containedctx',
  'contextcheck',
  'copyloopvar',
  'cyclop',
  'decorder',
  'dogsled',
  'dupl',
  'durationcheck',
  'errcheck',
  'errchkjson',
  'errname',
  'errorlint',
  'fatcontext',
  'forcetypeassert',
  'funlen',
  'ginkgolinter',
  'gocheckcompilerdirectives',
  'gochecksumtype',
  'gocognit',
  'goconst',
  'gocritic',
  'gocyclo',
  'godot',
  'goheader',
  'gomoddirectives',
  'gomodguard',
  'goprintffuncname',
  'gosec',
  'gosmopolitan',
  'govet',
  'grouper',
  'importas',
  'inamedparam',
  'ineffassign',
  'interfacebloat',
  'intrange',
  'lll',
  'loggercheck',
  'maintidx',
  'makezero',
  'mirror',
  'misspell',
  'nakedret',
  'nestif',
  'nilerr',
  'nilnil',
  'noctx',
  'nolintlint',
  'nonamedreturns',
  'nosprintfhostport',
  'perfsprint',
  'prealloc',
  'predeclared',
  'protogetter',
  'reassign',
  'rowserrcheck',
  'sloglint',
  'spancheck',
  'staticcheck',
  'testableexamples',
  'testifylint',
  'testpackage',
  'thelper',
  'tparallel',
  'unconvert',
  'unparam',
  'unused',
  'usestdlibvars',
  'wastedassign',
  'whitespace',
  'zerologlint',
]

[linters.settings]
[linters.settings.tagliatelle]
[linters.settings.tagliatelle.case]
[linters.settings.tagliatelle.case.rules]
json = 'camel'

[linters.settings.varnamelen]
ignore-names = ['rx', 'tx', 'db', 'ok', 'mw', 'gw', 'rt', 'id', 'x', 'y', 'w', 'h', 'i', 'j', 'k']
ignore-decls = ['w http.ResponseWriter', 'r *http.Request', 'c *gin.Context']

[linters.settings.lll]
line-length = 120

[linters.settings.funlen]
lines = 100
statements = 50

[linters.exclusions]
generated = 'lax'
paths = [
  'third_party',
  'builtin',
  'examples',
  'testdata',
  'third_party$',
  'builtin$',
  'examples$',
  'testdata$',
]

[[linters.exclusions.rules]]
linters = ['gosec']
text = 'G601:'

[[linters.exclusions.rules]]
linters = ['err113', 'wrapcheck']
path = 'cmd/.*\.go'

[[linters.exclusions.rules]]
linters = ['funlen', 'gocyclo', 'cyclop']
path = '_test\.go'

[[linters.exclusions.rules]]
linters = ['testpackage']
path = '_test\.go'

[[linters.exclusions.rules]]
linters = ['gosec']
text = 'G301:|G306:|G104:|G115:|G204:'
path = '_test\.go'

[[linters.exclusions.rules]]
linters = ['gosec']
text = 'G301:|G204:'
path = 'test/integration/.*\.go'

[[linters.exclusions.rules]]
linters = ['gosec']
text = 'G304:'
path = 'internal/utils/image_utils_test\.go'

[formatters]
[formatters.exclusions]
generated = 'lax'
paths = ['third_party$', 'builtin$', 'examples$', 'testdata$']