# pogo configuration file example
# Generated by: pogo config init
#
# This file contains all available configuration options with their default values.
# Copy this file to one of the search locations and modify the values you want to change.
#
# Configuration search locations:
# 1. ./pogo.yaml (current directory)
# 2. $HOME/pogo.yaml (user home directory)
# 3. $HOME/.config/pogo/pogo.yaml (XDG config directory)
# 4. /etc/pogo/pogo.yaml (system-wide configuration)
#
# Configuration precedence (highest to lowest):
# 1. Command-line flags
# 2. Environment variables (POGO_*)
# 3. Configuration file
# 4. Default values
#
# Environment variable naming:
# - Use POGO_ prefix
# - Replace dots with underscores
# - Convert to uppercase
# Examples: POGO_LOG_LEVEL, POGO_PIPELINE_DETECTOR_DB_THRESH

# Global settings
models_dir: "models"  # Directory containing ONNX models
log_level: "info"     # Log level: debug, info, warn, error
verbose: false        # Enable verbose output (equivalent to log_level: debug)

# OCR Pipeline configuration
pipeline:
  # Text detection settings
  detector:
    model_path: ""           # Override detection model path (empty = auto-detect)
    db_thresh: 0.3           # DB algorithm threshold for text detection
    db_box_thresh: 0.5       # Confidence threshold for detected text boxes
    polygon_mode: "minrect"  # Polygon extraction mode: minrect or contour
    use_nms: true            # Enable Non-Maximum Suppression
    nms_threshold: 0.2       # NMS overlap threshold
    num_threads: 0           # Number of threads (0 = auto)
    max_image_size: 960      # Maximum image dimension for processing

  # Text recognition settings
  recognizer:
    model_path: ""           # Override recognition model path (empty = auto-detect)
    dict_path: ""            # Dictionary file path for recognition
    dict_langs: ""           # Comma-separated language codes for auto-dict selection
    language: "en"           # Recognition language for text cleaning
    image_height: 32         # Recognition input height (0=auto, typical: 32 or 48)
    max_width: 0             # Maximum recognition width (0 = no limit)
    pad_width_multiple: 32   # Pad width to multiple of this value
    min_confidence: 0.0      # Minimum recognition confidence threshold
    num_threads: 0           # Number of threads (0 = auto)

  # Parallel processing settings
  parallel:
    max_workers: 4           # Number of parallel workers
    batch_size: 0            # Batch size for micro-batching (0 = no batching)

  # Resource management
  resource:
    max_goroutines: 0        # Maximum concurrent goroutines (0 = no limit)

  # Warmup iterations to reduce first-run latency
  warmup_iterations: 0       # Number of warmup runs per model

# Output configuration
output:
  format: "text"                 # Output format: text, json, csv
  file: ""                       # Output file path (empty = stdout)
  confidence_precision: 2        # Decimal places for confidence values
  overlay_dir: ""                # Directory for overlay images with detected boxes
  overlay_box_color: "#FF0000"   # Color for bounding boxes in overlays (hex)
  overlay_poly_color: "#00FF00"  # Color for polygons in overlays (hex)

# HTTP Server configuration (for 'serve' command)
server:
  host: "localhost"        # Server bind address
  port: 8080               # Server port
  cors_origin: "*"         # CORS allowed origins
  max_upload_mb: 50        # Maximum upload size in MB
  timeout_sec: 30          # Request timeout in seconds
  shutdown_timeout: 10     # Graceful shutdown timeout in seconds
  overlay_enabled: true    # Enable overlay image responses

# Batch processing configuration (for 'batch' command)
batch:
  workers: 4               # Number of concurrent batch workers
  output_dir: ""           # Output directory for batch results
  continue_on_error: false # Continue processing on individual file errors

# Feature toggles
features:
  # Document orientation detection
  orientation_enabled: false      # Enable document orientation detection
  orientation_threshold: 0.7      # Orientation confidence threshold (0.0-1.0)
  orientation_model_path: ""      # Override orientation model path

  # Text line orientation detection
  textline_enabled: false         # Enable per-text-line orientation detection
  textline_threshold: 0.6         # Text line orientation confidence threshold (0.0-1.0)
  textline_model_path: ""         # Override text line orientation model path

  # Document rectification (experimental)
  rectification_enabled: false    # Enable document rectification
  rectification_model_path: ""    # Override rectification model path
  rectification_threshold: 0.5    # Rectification mask threshold (0.0-1.0)
  rectification_height: 1024      # Rectified page output height
  rectification_debug_dir: ""     # Directory for rectification debug images

# GPU acceleration settings
gpu:
  enabled: false           # Enable GPU acceleration (requires CUDA)
  device: 0                # CUDA device ID to use
  memory_limit: "auto"     # GPU memory limit (e.g., "1GB", "512MB", or "auto")

# Example configurations for different use cases:

# High Accuracy Configuration:
# pipeline:
#   detector:
#     db_thresh: 0.2
#     db_box_thresh: 0.4
#   recognizer:
#     image_height: 48
#     min_confidence: 0.7

# Fast Processing Configuration:
# pipeline:
#   detector:
#     max_image_size: 640
#   recognizer:
#     image_height: 32
#   parallel:
#     max_workers: 8

# GPU Configuration:
# gpu:
#   enabled: true
#   device: 0
#   memory_limit: "2GB"
# pipeline:
#   parallel:
#     max_workers: 2  # Reduce workers when using GPU

# Server Configuration:
# server:
#   host: "0.0.0.0"
#   port: 8080
#   max_upload_mb: 100
#   timeout_sec: 60
# features:
#   orientation_enabled: true
#   textline_enabled: true